@page "/billetterie"
@using Olympics.Metier.Utils
@using Olympics.Services


<PageTitle>Billetterie Officiel de Paris 2024 - Jeux Olympiques et Paralympiques</PageTitle>

<!-- Le menu de navigation est inclus ici -->
<Navigation />

<!-- Body -->
<RadzenRow Gap="5" RowGap="5" class="billetterie-container">

    <RadzenColumn class="billetterie-titres" Size="12">
        <RadzenText class="billetterie-titre" Text="BILLETTERIE DES JEUX OLYMPIQUES ET PARALYMPIQUES" TagName="Radzen.Blazor.TagName.Auto"></RadzenText>
        <RadzenText class="billetterie-sous-titre" Text="Découvrez les billets disponibles !" TagName="Radzen.Blazor.TagName.H2"></RadzenText>
        <hr class="billetterie-long-hr" />
    </RadzenColumn>

    <!-- Afficher uniquement si l'utilisateur est admin et connecté

     Formulaire pour ajouter ou modifier une offre -->
    @if (isAdmin)
    {
        <RadzenColumn Size="12" class="billetterie-card-column-formulaire">
           
                <EditForm Model="currentSportTicket" OnValidSubmit="HandleSubmit" class="style-form-offer">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <fieldset>
                        <legend>@(isEditMode ? "Modifier l'offre" : "Créer une nouvelle offre")</legend>

                        <div class="style-form-offer-row">
                            <label for="sportName">Nom du sport:</label>
                            <InputText id="sportName" @bind-Value="currentSportTicket.SportName" placeholder="Nom du sport" />
                            <ValidationMessage For="@(() => currentSportTicket.SportName)" class="validation-message" />
                        </div>

                        <div class="style-form-offer-row">
                            <label for="description">Description de l'événement:</label>
                            <InputText id="description" @bind-Value="currentSportTicket.Description" placeholder="Description de l'événement" />
                            <ValidationMessage For="@(() => currentSportTicket.Description)" class="validation-message" />
                        </div>

                        <div class="style-form-offer-row">
                            <label for="priceSolo">Prix Solo:</label>
                            <InputNumber id="priceSolo" @bind-Value="currentSportTicket.PriceSolo" placeholder="Prix Solo" min="0" />
                            <ValidationMessage For="@(() => currentSportTicket.PriceSolo)" class="validation-message" />
                        </div>

                        <div class="style-form-offer-row">
                            <label for="priceDuo">Prix Duo:</label>
                            <InputNumber id="priceDuo" @bind-Value="currentSportTicket.PriceDuo" placeholder="Prix Duo" min="0" />
                            <ValidationMessage For="@(() => currentSportTicket.PriceDuo)" class="validation-message" />
                        </div>

                        <div class="style-form-offer-row">
                            <label for="priceFamily">Prix Famille:</label>
                            <InputNumber id="priceFamily" @bind-Value="currentSportTicket.PriceFamily" placeholder="Prix Famille" min="0" />
                            <ValidationMessage For="@(() => currentSportTicket.PriceFamily)" class="validation-message" />
                        </div>

                        <div class="image-preview">
                            <img id="imagePreview" src="/images/sports/cloche-gold.png" alt="Image par défaut" />
                        </div>

                        <button type="submit" class="offer-button">@(isEditMode ? "Modifier l'offre" : "Créer l'offre")</button>

                        @if (isEditMode)
                        {
                            <!-- Bouton pour revenir en mode création -->
                            <button type="button" class="offer-button" @onclick="CreateNewOffer">Créer une nouvelle offre</button>
                        }
                    </fieldset>
                </EditForm>
        
        </RadzenColumn>
    }


    @if (sportTickets != null && sportTickets.Any())
    {
        @foreach (var sportTicket in sportTickets)
        {
            <!-- Carte pour chaque sport -->
            <RadzenColumn Size="12" class="billetterie-card-column">
                <div class="billetterie-card-sport">
                    <RadzenRow>
                        <RadzenColumn Size="1">
                            <RadzenImage class="billetterie-card-image" Path="@(!string.IsNullOrEmpty(sportTicket.ImageUrl) ? sportTicket.ImageUrl : "/images/sports/cloche-gold.png")" AlternateText="Image de l'offre" />
                        </RadzenColumn>

                        <RadzenColumn Size="9">
                            <div class="billetterie-card-body">
                                <RadzenText class="billetterie-card-title" Text="@sportTicket.SportName" TextStyle="Radzen.Blazor.TextStyle.DisplayH6" TagName="Radzen.Blazor.TagName.H3"></RadzenText>
                                <RadzenText class="billetterie-card-description" Text="@sportTicket.Description" TagName="Radzen.Blazor.TagName.P"></RadzenText>
                            </div>

                            <!-- Section pour le billet Solo -->
                            <div class="billeterie-card-container @(isAdmin ? "admin" : "")">
                                <div class="billetterie-card-price @(isAdmin ? "admin" : "")">
                                    <p class="billetterie-card-price-label">Prix Solo: @sportTicket.PriceSolo €</p>
                                    <div class="billetterie-card-controls">
                                        <button class="billetterie-card-button" @onclick="() => DecreaseQuantity(sportTicket, TicketTypeManager.TicketType.Solo)">-</button>
                                        <span class="billetterie-card-quantity">@sportTicket.QuantitySolo</span>
                                        <button class="billetterie-card-button" @onclick="() => IncreaseQuantity(sportTicket, TicketTypeManager.TicketType.Solo)">+</button>
                                    </div>
                                </div>

                                <!-- Section pour le billet Duo -->
                                <div class="billetterie-card-price @(isAdmin ? "admin" : "")">
                                    <p class="billetterie-card-price-label">Prix Duo: @sportTicket.PriceDuo €</p>
                                    <div class="billetterie-card-controls">
                                        <button class="billetterie-card-button" @onclick="() => DecreaseQuantity(sportTicket, TicketTypeManager.TicketType.Duo)">-</button>
                                        <span class="billetterie-card-quantity">@sportTicket.QuantityDuo</span>
                                        <button class="billetterie-card-button" @onclick="() => IncreaseQuantity(sportTicket, TicketTypeManager.TicketType.Duo)">+</button>
                                    </div>
                                </div>

                                <!-- Section pour le billet Famille -->
                                <div class="billetterie-card-price @(isAdmin ? "admin" : "")">
                                    <p class="billetterie-card-price-label">Prix Famille: @sportTicket.PriceFamily €</p>
                                    <div class="billetterie-card-controls">
                                        <button class="billetterie-card-button" @onclick="() => DecreaseQuantity(sportTicket, TicketTypeManager.TicketType.Family)">-</button>
                                        <span class="billetterie-card-quantity">@sportTicket.QuantityFamily</span>
                                        <button class="billetterie-card-button" @onclick="() => IncreaseQuantity(sportTicket, TicketTypeManager.TicketType.Family)">+</button>
                                    </div>
                                </div>

                                <!-- Bouton Ajouter au panier -->
                                <div class="billetterie-card-panier-buttons">
                                <div class="billetterie-card-panier-button">
                                    <button class="billetterie-card-add-button @(isAdmin ? "admin" : "")"
                                            @onclick="() => AddTicketToPanier(sportTicket)">
                                        Ajouter au panier
                                    </button>
                                </div>


                                @if (isAdmin)
                                {
                                
                                    <!--  Bouton pour modifier une offre -->
                                    <div class="billetterie-card-panier-button admin">
                                        <button class="billetterie-card-modif-button" @onclick="() => EditOffer(sportTicket)">
                                            Modifier l'offre
                                        </button>
                                    </div>


                                    <!--  Bouton pour supprimer une offre -->
                                    <div class="billetterie-card-panier-button admin">
                                        <button class="billetterie-card-supp-button" @onclick="async () => await DeleteBilletOffre(sportTicket.IDOffre)">
                                            Supprimer l'offre
                                        </button>
                                    </div>
                                   
                                }
                                </div>
                            </div>
                        </RadzenColumn>
                    </RadzenRow>
                </div>
            </RadzenColumn>
        }
    }

</RadzenRow>
<Footer /> <!-- Le footer est inclus ici -->
